# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-08 21:58
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name=b'nombre de usuario')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name=b'email')),
                ('first_name', models.CharField(max_length=100, verbose_name=b'Nombre')),
                ('last_name', models.CharField(max_length=100, verbose_name=b'Apellido Paterno')),
                ('mom_last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Apellido Materno')),
                ('points', models.IntegerField(default=100, verbose_name=b'Puntos')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=b'/', verbose_name=b'Avatar')),
                ('certifier_document', models.FileField(blank=True, null=True, upload_to=b'', verbose_name=b'Documento verificador')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name=b'Fecha de registro')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name=b'Actualizado')),
                ('is_active', models.BooleanField(default=False, verbose_name=b'Verificado')),
                ('is_staff', models.BooleanField(default=False, verbose_name=b'Staff')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
    ]
